{"version":3,"sources":["constants/_shelfs.constants.js","constants/index.js","constants/_urls.constants.js","BooksAPI.js","components/preloaders/_Preloader.jsx","components/cards/_BookCard.jsx","components/layout/_Shelf.jsx","components/index.js","assets/icons/preloader.svg","routes/_AppRouter.jsx","App.js","index.js"],"names":["shelfs","value","title","__webpack_require__","d","__webpack_exports__","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getMyBooks","fetch","concat","booksApi","then","res","json","data","books","updateMyBooks","book","shelf","id","method","Object","_Users_seliana_Desktop_sel_dev_book_tracking_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","Content-Type","body","JSON","stringify","searchBooks","query","Preloader","react_default","a","createElement","className","src","Spinner","alt","draggable","BookCard","_React$Component","inherits","_super","_createSuper","classCallCheck","this","apply","arguments","createClass","key","_this","bookHasCover","props","imageLinks","thumbnail","style","width","height","backgroundImage","currentShelf","onChange","e","updateShelf","target","disabled","map","authors","author","React","Component","Shelf","_Shelf_createSuper","showTitle","_BookCard_BookCard","_Preloader_Preloader","_Shelf_Shelf","module","exports","p","HomePage","lazy","bind","SearchPage","AppRouter","react_router_dom","react","fallback","components","react_router","exact","path","render","routerProps","assign","showPreloader","myBooks","BooksApp","state","setState","BooksAPI","response","setBooks","_AppRouter_AppRouter","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f7c7da1c.chunk.js","sourcesContent":["export const shelfs = [\n  {\n    value: 'currentlyReading',\n    title: 'Currently Reading',\n  },\n  {\n    value: 'wantToRead',\n    title: 'Want to Read',\n  },\n  {\n    value: 'read',\n    title: 'Read',\n  },\n  {\n    value: 'none',\n    title: 'None',\n  },\n];\n","export * from './_shelfs.constants';\nexport * from './_urls.constants';\n","export const booksApi = 'https://reactnd-books-api.udacity.com';\n","import { booksApi } from './constants';\n\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: 'application/json',\n  Authorization: token,\n};\n\nexport const getMyBooks = () =>\n  fetch(`${booksApi}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const updateMyBooks = (book, shelf) =>\n  fetch(`${booksApi}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const searchBooks = (query) =>\n  fetch(`${booksApi}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ query }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React from 'react';\n\nimport Spinner from '../../assets/icons/preloader.svg';\nimport './_preloader.scss';\n\nexport const Preloader = () => (\n  <div className=\"preloader\">\n    <img className=\"spinner\" src={Spinner} alt=\"spinner\" draggable={false} />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { shelfs } from '../../constants';\nimport './_book_card.scss';\n\nconst noCoverImage =\n  'https://i.ebayimg.com/thumbs/images/g/~V8AAOSw1oJdMTOQ/s-l96.jpg';\n\nexport class BookCard extends React.Component {\n  render() {\n    const bookHasCover =\n      this.props.book.imageLinks && this.props.book.imageLinks.thumbnail;\n\n    return (\n      <div className=\"book\">\n        <div className=\"top\">\n          <div\n            className=\"cover\"\n            style={{\n              width: 128,\n              height: 193,\n              backgroundImage: `url(${\n                bookHasCover\n                  ? this.props.book.imageLinks.thumbnail\n                  : noCoverImage\n              })`,\n            }}\n          ></div>\n          <div className=\"shelf_changer\">\n            <select\n              value={this.props.currentShelf}\n              onChange={(e) =>\n                this.props.updateShelf(this.props.book, e.target.value)\n              }\n            >\n              <option value=\"move\" disabled>\n                Move to...\n              </option>\n\n              {shelfs.map((shelf) => (\n                <option key={shelf.value} value={shelf.value}>\n                  {shelf.title}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"book_title\">{this.props.book.title}</div>\n        {this.props.book.authors && (\n          <div className=\"book_authors\">\n            {this.props.book.authors.map((author) => (\n              <span>{author}</span>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nBookCard.propTypes = {\n  book: PropTypes.object.isRequired,\n  currentShelf: PropTypes.string.isRequired,\n  updateShelf: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { BookCard } from '../cards';\nimport './_shelf.scss';\n\nexport class Shelf extends React.Component {\n  render() {\n    return (\n      <div className=\"bookshelf_wrapper\">\n        {this.props.showTitle && (\n          <h2 className=\"bookshelf_title\">{this.props.shelf.title}</h2>\n        )}\n\n        <div className=\"bookshelf_books\">\n          {this.props.books.map((book) => (\n            <BookCard\n              key={book.id}\n              book={book}\n              currentShelf={this.props.shelf.value}\n              updateShelf={this.props.updateShelf}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nShelf.propTypes = {\n  shelf: PropTypes.object.isRequired,\n  showTitle: PropTypes.bool,\n  books: PropTypes.array.isRequired,\n};\n","export * from './preloaders';\nexport * from './cards';\nexport * from './layout';\n","module.exports = __webpack_public_path__ + \"static/media/preloader.1d3fd6c0.svg\";","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { Preloader } from '../components';\n\nconst HomePage = React.lazy(() => import('../pages/HomePage'));\nconst SearchPage = React.lazy(() => import('../pages/SearchPage'));\n\nexport class AppRouter extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Suspense fallback={<Preloader />}>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(routerProps) => (\n                <HomePage\n                  {...routerProps}\n                  books={this.props.books}\n                  updateShelf={this.props.updateShelf}\n                  showPreloader={this.props.showPreloader}\n                />\n              )}\n            />\n            <Route\n              path=\"/search\"\n              render={(routerProps) => (\n                <SearchPage\n                  {...routerProps}\n                  myBooks={this.props.books}\n                  updateShelf={this.props.updateShelf}\n                />\n              )}\n            />\n          </Switch>\n        </Suspense>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport { AppRouter } from './routes';\nimport './App.scss';\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n    showPreloader: false,\n  };\n\n  getMyBooks = () => {\n    this.setState({ showPreloader: true });\n\n    BooksAPI.getMyBooks().then((response) => {\n      this.setState({ showPreloader: false });\n      this.setState({ books: response });\n    });\n  };\n\n  setBooks = (books) => {\n    this.setState({\n      books: books,\n    });\n  };\n\n  componentDidMount() {\n    this.getMyBooks();\n  }\n\n  updateShelf = (book, shelf) => {\n    BooksAPI.updateMyBooks(book, shelf).then(() => {\n      this.getMyBooks();\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <AppRouter\n          books={this.state.books}\n          updateShelf={this.updateShelf}\n          showPreloader={this.state.showPreloader}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}